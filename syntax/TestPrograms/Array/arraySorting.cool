class Main inherits IO {
  main() : Object {
    let 
      arr : Array[Int] <- new Array[Int](8),
      n : Int <- 8,
      i : Int <- 0,
      j : Int <- 0,
      temp : Int,
      swapped : Bool
    in {
      -- Initialize with unsorted values
      arr[0] <- 64;
      arr[1] <- 25;
      arr[2] <- 12;
      arr[3] <- 22;
      arr[4] <- 11;
      arr[5] <- 1;
      arr[6] <- 90;
      arr[7] <- 46;
      
      -- Print unsorted array
      out_string("Before sorting:\nArray: ");
      i <- 0;
      while i < n loop {
        out_int(arr[i]);
        out_string(" ");
        i <- i + 1;
      } pool;
      out_string("\n");
      
      -- Bubble sort implementation
      i <- 0;
      while i < n loop {
        swapped <- false;
        j <- 0;
        
        while j < (n - i - 1) loop {
          if arr[j+1] < arr[j] then {
            -- Swap arr[j] and arr[j+1]
            temp <- arr[j];
            arr[j] <- arr[j + 1];
            arr[j + 1] <- temp;
            swapped <- true;
          } else false fi;
          
          j <- j + 1;
        } pool;
        
        -- If no swapping occurred in this pass, array is sorted
        if not swapped then
          i <- n  -- Exit the outer loop
        else
          i <- i + 1
        fi;
      } pool;
      
      -- Print sorted array
      out_string("After sorting:\nArray: ");
      i <- 0;
      while i < n loop {
        out_int(arr[i]);
        out_string(" ");
        i <- i + 1;
      } pool;
      out_string("\n");
    }
  };
};